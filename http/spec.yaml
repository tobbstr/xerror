openapi: 3.0.0
info:
  version: 1.0.0
  title: Error API
  description: Error API

security: []

servers: []

paths: 
  /v1/dummy-path:
    post:
      operationId: dummyPath
      summary: Without this path the oapi-codegen will not generate the models
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ErrorResult'

components:
  schemas:
    FieldViolation:
      type: object
      description: Describes a single bad request field.
      properties:
        field:
          type: string
          description: |
            Name of violated field

            Ex.
            A path that leads to a field in the request body. The value will be a
            sequence of dot-separated identifiers that identify a protocol buffer
            field.

            Consider the following:

            ```
            message CreateContactRequest {
              message EmailAddress {
                enum Type {
                  TYPE_UNSPECIFIED = 0;
                  HOME = 1;
                  WORK = 2;
                }

                optional string email = 1;
                repeated EmailType type = 2;
              }

              string full_name = 1;
              repeated EmailAddress email_addresses = 2;
            }
            ```

            In this example, in proto `field` could take one of the following values:

              - `full_name` for a violation in the `full_name` value
              - `email_addresses[1].email` for a violation in the `email` field of the
                first `email_addresses` message
              - `email_addresses[3].type[2]` for a violation in the second `type`
                value in the third `email_addresses` message.

            In JSON, the same values are represented as:

              - `fullName` for a violation in the `fullName` value
              - `emailAddresses[1].email` for a violation in the `email` field of the
                first `emailAddresses` message
              - `emailAddresses[3].type[2]` for a violation in the second `type`
                value in the third `emailAddresses` message.
        description:
          type: string
          description: A description of why the request element is bad
      required:
        - field
        - description

    PreconditionViolation:
      type: object
      description: Describes a single precondition failure.
      properties:
        type:
          type: string
          description: |
            The type of violation. Is a service-specific
            enum type to define the supported precondition violation subjects. For
            example, "ErrVersionMismatch" for "Battery tracking version mismatch".
        subject:
          type: string
          description: |
            The subject, relative to the type, that failed.
            For example, `voiapp.io/battery/v1/battery-trackings/b21df375-59c9-4561-93bc-2a095b6f9a90` relative to
            the "ErrVersionMismatch" type would indicate which battery tracking has a version mismatch conflict.
        description:
          type: string
          description: |
            A description of how the precondition failed. Developers can use this
            description to understand how to fix the failure.

            For example: "Battery tracking version not accepted".
      required:
        - type
        - subject
        - description

    PreconditionFailureDetails:
      type: object
      description: Describes what preconditions have failed.
      properties:
        type:
          type: string
          description: The type of error detail.
          enum:
            - type.googleapis.com/google.rpc.PreconditionFailure
        violations:
          type: array
          items:
            $ref: "#/components/schemas/PreconditionViolation"
      required:
        - type
        - violations

    BadRequestDetails:
      type: object
      description: Describes violations in a client request. This error type focuses on the syntactic aspects of the request.
      properties:
        type:
          type: string
          description: The type of error detail.
          enum:
            - type.googleapis.com/google.rpc.BadRequest
        fieldViolations:
          type: array
          items:
            $ref: "#/components/schemas/FieldViolation"
      required:
        - type
        - fieldViolations

    DebugInfoDetails:
      type: object
      description: Describes additional debugging info.
      properties:
        type:
          type: string
          description: The type of error detail.
          enum:
            - type.googleapis.com/google.rpc.DebugInfo
        stackEntries:
          type: array
          description: The stack trace entries indicating where the error occurred.
          items:
            type: string
        detail:
          type: string
          description: Additional debugging information provided by the server.
      required:
        - type
        - detail

    ResourceInfo:
      type: object
      description: Describes the resource that is being accessed.
      properties:
        resourceType:
          type: string
          description: |
            A name for the type of resource being accessed, e.g. "sql table", "cloud storage bucket", "file",
            "Google calendar"; or the type URL of the resource: e.g. "type.googleapis.com/google.pubsub.v1.Topic".
        resourceName:
          type: string
          description: |
            The full resource name of the resource being accessed. For example, a shared calendar
            name: "example.com_4fghdhgsrgh@group.calendar.google.com", if the current error is
            [google.rpc.Code.PERMISSION_DENIED][google.rpc.Code.PERMISSION_DENIED].
            Or, for a Google Cloud Storage bucket, "projects/<my-project-id>/buckets/<my-bucket-name>".
        owner:
          type: string
          description: |
            The owner of the resource (optional).
            For example, "user:<owner email>".
        description:
          type: string
          description: |
            Describes what error is encountered when accessing this resource. For example, updating a cloud project may
            require the `writer` permission on the developer console project.
      required:
        - resourceType
        - resourceName
        - description
    
    ResourceInfoDetails:
      type: object
      description: Describes resources in a client request.
      properties:
        type:
          type: string
          description: The type of error detail.
          enum:
            - type.googleapis.com/google.rpc.ResourceInfo
        resourceInfos:
          type: array
          items:
            $ref: "#/components/schemas/ResourceInfo"
      required:
        - type
        - resourceInfos
    
    ErrorInfoDetails:
      type: object
      description: |
        Describes the cause of the error with structured details.
        
        Example of an error when contacting the "pubsub.googleapis.com" API when it
        is not enabled:
        
            { "reason": "API_DISABLED"
              "domain": "googleapis.com"
              "metadata": {
                "resource": "projects/123",
                "service": "pubsub.googleapis.com"
              }
            }
        
        This response indicates that the pubsub.googleapis.com API is not enabled.
        
        Example of an error that is returned when attempting to create a Spanner
        instance in a region that is out of stock:
        
            { "reason": "STOCKOUT"
              "domain": "spanner.googleapis.com",
              "metadata": {
                "availableRegions": "us-central1,us-east2"
              }
            }
      properties:
        type:
          type: string
          description: The type of error detail.
          enum:
            - type.googleapis.com/google.rpc.ErrorInfo
        reason:
          type: string
          description: |
            The reason of the error. This is a constant value that identifies the
            proximate cause of the error. Error reasons are unique within a particular
            domain of errors. This should be at most 63 characters and match a
            regular expression of `[A-Z][A-Z0-9_]+[A-Z0-9]`, which represents
            UPPER_SNAKE_CASE.
        domain:
          type: string
          description: |
            The logical grouping to which the "reason" belongs. The error domain
            is typically the registered service name of the tool or product that
            generates the error. Example: "pubsub.googleapis.com". If the error is
            generated by some common infrastructure, the error domain must be a
            globally unique value that identifies the infrastructure. For Google API
            infrastructure, the error domain is "googleapis.com".
        metadata:
          type: object
          description: |
            Additional structured details about this error.

            Keys should match [a-zA-Z0-9-_] and be limited to 64 characters in
            length. When identifying the current value of an exceeded limit, the units
            should be contained in the key, not the value.  For example, rather than
            {"instanceLimit": "100/request"}, should be returned as,
            {"instanceLimitPerRequest": "100"}, if the client exceeds the number of
            instances that can be created in a single (batch) request.
          additionalProperties:
            type: string
      required:
        - type
        - reason
        - domain
        - metadata

    RequestInfoDetails:
      type: object
      description: |
        Contains metadata about the request that clients can attach when filing a bug or providing other forms of feedback.
      properties:
        type:
          type: string
          description: The type of error detail.
          enum:
            - type.googleapis.com/google.rpc.RequestInfo
        requestId:
          type: string
          description: |
            An opaque string that should only be interpreted by the service generating
            it. For example, it can be used to identify requests in the service's logs.
        servingData:
          type: string
          description: |
            Any data that was used to serve this request. For example, an encrypted
            stack trace that can be sent back to the service provider for debugging.
      required:
        - type
        - requestId
        - servingData
    
    Error:
      type: object
      description: "The error schema for Google's JSON HTTP APIs. For more info: https://cloud.google.com/apis/design/errors#http_mapping."
      properties:
        message:
          type: string
          description: A human-readable description of the error
        code:
          type: integer
          description: An HTTP status code that corresponds to `google.rpc.Status.code`
          example: 200
        status:
          type: string
          description: A machine-readable enum version of `google.rpc.Status.code`
          example: INVALID_ARGUMENT
        details:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/BadRequestDetails"
              - $ref: "#/components/schemas/PreconditionFailureDetails"
              - $ref: "#/components/schemas/DebugInfoDetails"
              - $ref: "#/components/schemas/ResourceInfoDetails"
              - $ref: "#/components/schemas/ErrorInfoDetails"
              - $ref: "#/components/schemas/RequestInfoDetails"
      required:
        - message
        - code
        - status

    ErrorResult:
      type: object
      properties:
        error:
          $ref: "#/components/schemas/Error"
      required:
        - error
